set(CTEST_SITE "Travis CI")

string(SUBSTRING "$ENV{TRAVIS_COMMIT}" 0 7 COMMIT_ID)
if($ENV{CC} STREQUAL "gcc")
    set(CTEST_BUILD_NAME "$ENV{TRAVIS_BUILD_NUMBER}-${COMMIT_ID}-gcc-4.6")
elseif($ENV{CC} STREQUAL "clang")
    set(CTEST_BUILD_NAME "$ENV{TRAVIS_BUILD_NUMBER}-${COMMIT_ID}-clang-3.5")
else()
    set(CTEST_BUILD_NAME "$ENV{TRAVIS_BUILD_NUMBER}-${COMMIT_ID}-$ENV{CC}")
endif()

set(CTEST_SOURCE_DIRECTORY "$ENV{TRAVIS_BUILD_DIR}")
set(CTEST_BINARY_DIRECTORY "${CTEST_SOURCE_DIRECTORY}/build")

set(CTEST_CMAKE_GENERATOR "Unix Makefiles")
set(CTEST_BUILD_CONFIGURATION "$ENV{CMAKE_BUILD_TYPE}")
set(CTEST_CONFIGURATION_TYPE "Debug")

find_program(CTEST_MEMORYCHECK_COMMAND NAMES valgrind)
set(CTEST_MEMORYCHECK_TYPE "Valgrind")
set(CTEST_MEMORYCHECK_COMMAND_OPTIONS "--track-origins=yes --leak-check=yes")

if($ENV{CC} STREQUAL "gcc")
    set(CTEST_COVERAGE_COMMAND "gcov")
else()
    string(SUBSTRING "$ENV{CC}" 0 3 CC)
    if(CC STREQUAL "gcc")
        string(SUBSTRING "$ENV{CC}" 4 -1 CC_VERSION)
        find_program(CTEST_COVERAGE_COMMAND NAMES gcov-${CC_VERSION})
    endif()
    string(SUBSTRING "$ENV{CC}" 0 5 CC)
    if(CC STREQUAL "clang")
        find_program(CTEST_COVERAGE_COMMAND NAMES llvm-cov-3.6)
    endif()
endif()
set(CTEST_CUSTOM_COVERAGE_EXCLUDE ${CTEST_CUSTOM_COVERAGE_EXCLUDE} "/distribution/" "/examples/" "/thirdparty/" "/tests/" "/cov-int/" "/CMakeFiles/" "/usr/")
set(CTEST_COVERAGE_EXTRA_FLAGS "${CTEST_COVERAGE_EXTRA_FLAGS} -l -p")

ctest_start(Continuous)
ctest_configure()
ctest_build()
ctest_test()
ctest_memcheck()
ctest_coverage()
ctest_submit()
