cmake_minimum_required(VERSION 3.0)
include(CheckIncludeFiles)
include(CheckLibraryExists)

set(DIST_DIR ${CMAKE_CURRENT_LIST_DIR}/../distribution)
set(SOURCE_DIR ${CMAKE_CURRENT_LIST_DIR}/../sourcecode)
set(EXAMPLE_DIR ${CMAKE_CURRENT_LIST_DIR}/../examples)

project (KD)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c11 -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -Wfatal-errors -pedantic")

    set(KD_SOURCE ${SOURCE_DIR}/kd.c)
    list(APPEND KD_SOURCE ${KD_SOURCE})
    list(APPEND KD_INCLUDE_DIRS ${DIST_DIR})

    check_include_files("X11/Xlib.h;X11/Xutil.h" KD_WINDOW_SUPPORTED)
    configure_file(${DIST_DIR}/KD/kdplatform.h.in ${DIST_DIR}/KD/kdplatform.h)
    check_include_files(threads.h HAVE_THREADS_H)
    if(NOT HAVE_THREADS_H)
        list(APPEND KD_SOURCE ${SOURCE_DIR}/thirdparty/threads/threads.c)
        list(APPEND KD_INCLUDE_DIRS ${SOURCE_DIR}/thirdparty/threads)
    endif()
    check_include_files(mqueue.h HAVE_MQUEUE_H)
    if(NOT HAVE_MQUEUE_H)
        list(APPEND KD_SOURCE ${SOURCE_DIR}/thirdparty/mqueue/mqeue.c)
        list(APPEND KD_INCLUDE_DIRS ${SOURCE_DIR}/thirdparty/mqueue)
    endif()
    check_library_exists(X11 XOpenDisplay "" HAVE_X11)
    if(HAVE_X11)
        list(APPEND KD_LIBRARIES X11)
    endif()


    find_package (Threads)
    list(APPEND KD_LIBRARIES ${CMAKE_THREAD_LIBS_INIT})
    list(APPEND KD_LIBRARIES ${CMAKE_DL_LIBS})
    list(APPEND KD_LIBRARIES rt)
    list(APPEND KD_LIBRARIES m)
    list(APPEND KD_LIBRARIES EGL)
    list(APPEND KD_LIBRARIES GLESv2)

    include_directories(${KD_INCLUDE_DIRS} )
    add_library (KD SHARED ${KD_SOURCE})
    target_link_libraries(KD ${KD_LIBRARIES})

project (KD_example_1)
    include_directories(${DIST_DIR})
    add_executable(KD_example_1 ${EXAMPLE_DIR}/kd_example_1.c)
    target_link_libraries(KD_example_1 KD)