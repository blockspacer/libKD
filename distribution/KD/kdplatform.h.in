/******************************************************************************
 * Copyright (c) 2014 Kevin Schmidt
 * 
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 * 
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 * 
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 ******************************************************************************/

#ifndef __kdplatform_h_
#define __kdplatform_h_

#define MESA_EGL_NO_X11_HEADERS
#include <KHR/khrplatform.h>

#cmakedefine KD_WINDOW_SUPPORTED

#cmakedefine KD_GC_SUPPORTED

#cmakedefine KD_VFS_SUPPORTED

#cmakedefine KD_NO_STATIC_DATA

#define KD_API KHRONOS_APICALL
#define KD_APIENTRY KHRONOS_APIENTRY

#if __STDC_VERSION__ >= 201112L
    #define KD_NORETURN _Noreturn
#else
    #ifdef _MSC_VER
        #define KD_NORETURN
    #endif
    #define KD_NORETURN __declspec(noreturn)
#endif

#ifdef NDEBUG
    #define KD_NDEBUG
#endif

#ifdef KD_NDEBUG
    #define kdAssert(c) do { (void) sizeof ((x)) ; } while (0)
#else
    #include <assert.h>
    #define kdAssert(c) assert(c)
#endif

typedef khronos_int32_t KDint32;
typedef khronos_uint32_t KDuint32;
typedef khronos_int64_t KDint64;
typedef khronos_uint64_t KDuint64;
typedef khronos_int16_t KDint16;
typedef khronos_uint16_t KDuint16;
typedef khronos_uintptr_t KDuintptr;
typedef khronos_usize_t KDsize;
typedef khronos_ssize_t KDssize;
#define KDINT_MIN (-0x7fffffff-1)
#define KDINT_MAX 0x7fffffff
#define KDUINT_MAX 0xffffffffU
#define KDINT64_MIN (-0x8000000000000000-1)
#define KDINT64_MAX 0x7fffffffffffffff
#define KDUINT64_MAX 0xffffffffffffffffU
#define KDSSIZE_MIN KDINT64_MIN
#define KDSSIZE_MAX KDINT64_MAX
#define KDSIZE_MAX KDUINT_MAX
#define KDUINTPTR_MAX KDUINT_MAX
#define KD_INFINITY 0x7f800000

#endif /* __kdplatform_h_ */

