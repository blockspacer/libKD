language: c

cache:
  directories:
    - ci-tools/cache

matrix:
  include:
    - os: linux
      compiler: gcc
      dist: trusty
      sudo: required
      addons:
        apt:
          packages: ['libegl1-mesa-dev', 'libgles2-mesa-dev', 'libx11-dev', 'ca-certificates']
      env:
        - secure: "Lo6vQDjM1B/BNAhTSphPCEbKxc7uaxOmg8GE+k94tVj4cZuzwvZb8YN8w6FCaHL/D8Vc+TIVAoBRBEGZ9J+VE02kK86kiN8ftcBevF5rtuDNyc4b7yohfpkdfIAe0IJxN76J5mLlwVvlGMPDkDMyPgwNQdSPQpa+HAvwK/kSOJw="
        - COVERITY_SCAN_PROJECT_NAME="h-s-c/libKD"
        - COVERITY_SCAN_NOTIFICATION_EMAIL="h-s-c@users.noreply.github.com"
        - COVERITY_SCAN_BRANCH_PATTERN="coverity"
        - COVERITY_SCAN_BUILD_COMMAND="python ci-tools/run_ctest.py"
      before_install:
        - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-certificates.crt
      install: python ci-tools/install_cmake.py
      script:
        - if [ "$TRAVIS_BRANCH" = "coverity" ]; then
            curl -s "https://scan.coverity.com/scripts/travisci_build_coverity_scan.sh" | /bin/bash;
          else true; fi;

    - os: linux
      compiler: gcc
      dist: trusty
      sudo: required
      addons:
        apt:
          packages: ['libegl1-mesa-dev', 'libgles2-mesa-dev', 'libx11-dev']
      deploy:
        provider: packagecloud
        dist: "ubuntu/trusty"
        repository: "libKD"
        username: "h-s-c"
        token:
          secure: "q55rWSAf5bU/WpC0l8SVS/F0UvGLvFBmn7TVZJ922Yz2nTswxojib9eFhbEds63LprN3/G1kE7VnUE/GygEpbw/z3shWnZIsymWfK18VwLIJZlcOUEyaFrmJwBbN742lkPxENObQjYrSuOSEA46ztcurXyRVsCTIzYvcbdveLW4="
        skip_cleanup: true
        on:
          tags: true
      install: python ci-tools/install_cmake.py  
      script:
        - if [ "$TRAVIS_TAG" ]; then 
            python ci-tools/run_cpack.py;
          else true; fi;

    - os: linux
      compiler: gcc
      dist: precise
      sudo: false
      addons:
        apt:
          packages: ['libegl1-mesa-dev', 'libgles2-mesa-dev', 'libx11-dev']
      deploy:
        provider: packagecloud
        dist: "ubuntu/precise"
        repository: "libKD"
        username: "h-s-c"
        token:
          secure: "q55rWSAf5bU/WpC0l8SVS/F0UvGLvFBmn7TVZJ922Yz2nTswxojib9eFhbEds63LprN3/G1kE7VnUE/GygEpbw/z3shWnZIsymWfK18VwLIJZlcOUEyaFrmJwBbN742lkPxENObQjYrSuOSEA46ztcurXyRVsCTIzYvcbdveLW4="
        skip_cleanup: true
        on:
          tags: true
      install: python ci-tools/install_cmake.py  
      script:
        - if [ "$TRAVIS_TAG" ]; then 
            python ci-tools/run_cpack.py;
          else true; fi;

    - os: linux
      compiler: gcc-6
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-6', 'valgrind', 'binutils-gold', 'libegl1-mesa-dev', 'libx11-dev']
      install: python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: gcc-5
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-5', 'valgrind', 'binutils-gold', 'libegl1-mesa-dev', 'libx11-dev']
      install: python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: gcc-4.9
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-4.9', 'valgrind', 'binutils-gold', 'libegl1-mesa-dev', 'libx11-dev']
      install: python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: gcc-4.8
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-4.8', 'valgrind', 'binutils-gold', 'libegl1-mesa-dev', 'libx11-dev']
      install: python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: gcc-4.7
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-4.7', 'valgrind', 'binutils-gold', 'libegl1-mesa-dev', 'libx11-dev']
      install: python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: clang-5.0
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: 
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty main'
              key_url: 'http://llvm.org/apt/llvm-snapshot.gpg.key'
          packages: ['clang-5.0', 'llvm-5.0', 'valgrind', 'libegl1-mesa-dev', 'libx11-dev']
      install: python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: clang-4.0
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: 
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main'
              key_url: 'http://llvm.org/apt/llvm-snapshot.gpg.key'
          packages: ['clang-4.0', 'llvm-4.0', 'valgrind', 'libegl1-mesa-dev', 'libx11-dev']
      install: python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: clang-3.9
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: 
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main'
              key_url: 'http://llvm.org/apt/llvm-snapshot.gpg.key'
          packages: ['clang-3.9', 'llvm-3.9', 'valgrind', 'libegl1-mesa-dev', 'libx11-dev']
      install: python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: clang-3.8
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: 
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.8 main'
              key_url: 'http://llvm.org/apt/llvm-snapshot.gpg.key'
          packages: ['clang-3.8', 'llvm-3.8', 'valgrind', 'libegl1-mesa-dev', 'libx11-dev']
      install: python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: clang-3.6
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['clang-3.6', 'llvm-3.6', 'valgrind', 'libegl1-mesa-dev', 'libx11-dev']
      install: python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: clang-3.5
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['clang-3.5', 'llvm-3.5', 'valgrind', 'libegl1-mesa-dev', 'libx11-dev']
      install: python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: icc
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['valgrind', 'libegl1-mesa-dev', 'libx11-dev']
      install: 
        - python ci-tools/install_cmake.py 
        - python ci-tools/install_icc.py
      before_script: source ci-tools/icc/bin/compilervars.sh intel64
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: tcc
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['tcc', 'valgrind', 'libegl1-mesa-dev', 'libx11-dev']
      install: python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: x86_64-w64-mingw32-gcc
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: 
            - ubuntu-toolchain-r-test
            - sourceline: 'ppa:wine/wine-builds'
          packages: ['mingw-w64', 'valgrind', 'binutils-gold']
      before_install: 
        - sudo sed -i -e 's/deb http/deb [arch=amd64] http/' "/etc/apt/sources.list.d/google-chrome.list" "/opt/google/chrome/cron/google-chrome"
        - sudo dpkg --add-architecture i386
        - sudo apt-get update -qq
        - sudo apt-get install -y --install-recommends winehq-staging
      install: 
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/egl.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglext.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglplatform.h
        - wget -P include/KHR https://www.khronos.org/registry/egl/api/KHR/khrplatform.h
        - python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: linux
      compiler: i686-w64-mingw32-gcc
      dist: trusty
      sudo: required
      addons:
        apt:
          sources: 
            - ubuntu-toolchain-r-test
            - sourceline: 'ppa:wine/wine-builds'
          packages: ['mingw-w64', 'valgrind', 'binutils-gold']
      before_install: 
        - sudo sed -i -e 's/deb http/deb [arch=amd64] http/' "/etc/apt/sources.list.d/google-chrome.list" "/opt/google/chrome/cron/google-chrome"
        - sudo dpkg --add-architecture i386
        - sudo apt-get update -qq
        - sudo apt-get install -y --install-recommends winehq-staging
      install: 
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/egl.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglext.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglplatform.h
        - wget -P include/KHR https://www.khronos.org/registry/egl/api/KHR/khrplatform.h
        - python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: osx
      compiler: clang
      osx_image: xcode8.2
      install: 
        - brew update
#        - brew install valgrind
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/egl.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglext.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglplatform.h
        - wget -P include/KHR https://www.khronos.org/registry/egl/api/KHR/khrplatform.h
        - python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: osx
      compiler: clang
      osx_image: xcode8.1
      install: 
        - brew update
#        - brew install valgrind
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/egl.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglext.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglplatform.h
        - wget -P include/KHR https://www.khronos.org/registry/egl/api/KHR/khrplatform.h
        - python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: osx
      compiler: clang
      osx_image: xcode8
      install: 
        - brew update
        - brew install valgrind
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/egl.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglext.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglplatform.h
        - wget -P include/KHR https://www.khronos.org/registry/egl/api/KHR/khrplatform.h
        - python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: osx
      compiler: clang
      osx_image: xcode7.3
      install: 
        - brew update
        - brew install valgrind
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/egl.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglext.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglplatform.h
        - wget -P include/KHR https://www.khronos.org/registry/egl/api/KHR/khrplatform.h
        - python ci-tools/install_cmake.py   
      script: python ci-tools/run_ctest.py

    - os: osx
      compiler: clang
      osx_image: xcode6.4
      install: 
        - brew update
        - brew install valgrind
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/egl.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglext.h
        - wget -P include/EGL https://www.khronos.org/registry/egl/api/EGL/eglplatform.h
        - wget -P include/KHR https://www.khronos.org/registry/egl/api/KHR/khrplatform.h
        - python ci-tools/install_cmake.py  
      script: python ci-tools/run_ctest.py

  allow_failures:
    - compiler: icc # Unstable
    - compiler: clang-5.0 # Unstable