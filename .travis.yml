language: c

compiler:
  - gcc
  - clang

before_install:
  - sudo apt-get purge --auto-remove gcc clang cmake
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo add-apt-repository -y ppa:kalakris/cmake
  - if [ "$CC" = "clang" ]; then sudo apt-add-repository -y "deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.5 main"; fi
  - if [ "$CC" = "clang" ]; then wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key|sudo apt-key add -; fi
  - sudo apt-get update -qq

install:
  - sudo apt-get install -qq cmake
  - if [ "$CC" = "gcc" ]; then sudo apt-get install -qq gcc-4.9; fi
  - if [ "$CC" = "gcc" ]; then sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 90; fi
  - if [ "$CC" = "gcc" ]; then sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-4.9 90; fi
  - if [ "$CC" = "gcc" ]; then sudo apt-get install -qq lcov; fi
  - if [ "$CC" = "gcc" ]; then wget -nc --no-check-certificate http://downloads.sourceforge.net/ltp/lcov-1.11.tar.gz && tar xzf lcov-1.11.tar.gz; fi
  - if [ "$CC" = "gcc" ]; then cd lcov-1.11 && make && sudo make install && cd ..; fi
  - if [ "$CC" = "gcc" ]; then gem install coveralls-lcov; fi
  - if [ "$CC" = "clang" ]; then sudo apt-get install --allow-unauthenticated -qq clang-3.5; fi
  - if [ "$CC" = "clang" ]; then sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.5 90; fi
  - sudo apt-get install -qq libegl1-mesa-dev libgles2-mesa-dev libx11-dev libwayland-dev libbsd-dev

script:
  - if [ "$CC" = "gcc" ]; then gcc --version 90; fi
  - if [ "$CC" = "clang" ]; then clang --version 90; fi
  - cmake -DCMAKE_BUILD_TYPE=Debug -DKD_BUILD_TESTS=On -DKD_BUILD_COVERAGE=On .
  - cmake --build . --config Debug
  - ctest

after_success:
  - if [ "$CC" = "gcc" ]; then lcov --compat-libtool --directory . --capture --output-file=coverage.info; fi
  - if [ "$CC" = "gcc" ]; then lcov --remove coverage.info 'distribution/*' 'examples/*' 'sourcecode/thirdparty/*' 'tests/*' 'cov-int/*' 'CMakeFiles/*' '/usr*' -o coverage.info; fi
  - if [ "$CC" = "gcc" ]; then coveralls-lcov coverage.info; fi

notifications:
  email:
    on_success: change
    on_failure: always

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "Lo6vQDjM1B/BNAhTSphPCEbKxc7uaxOmg8GE+k94tVj4cZuzwvZb8YN8w6FCaHL/D8Vc+TIVAoBRBEGZ9J+VE02kK86kiN8ftcBevF5rtuDNyc4b7yohfpkdfIAe0IJxN76J5mLlwVvlGMPDkDMyPgwNQdSPQpa+HAvwK/kSOJw="

addons:
  coverity_scan:
    project:
      name: "h-s-c/libKD"
    notification_email: h-s-c@users.noreply.github.com
    build_command_prepend: "cmake -DCMAKE_BUILD_TYPE=Debug -DKD_BUILD_TESTS=On -DKD_BUILD_COVERAGE=On ."
    build_command:   "cmake --build . --config Debug"
    branch_pattern: coverity