###############################################################################
# libKD
# zlib/libpng License
###############################################################################
# Copyright (c) 2014-2015 Kevin Schmidt
#
# This software is provided 'as-is', without any express or implied
# warranty. In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software
#    in a product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
# 3. This notice may not be removed or altered from any source distribution.
###############################################################################

language: c

matrix:
  include:
    - os: linux
      compiler: gcc
      env: TARGET_OS=linux TARGET_ARCH=x86_64 CC_VERSION=4.9
    - os: linux
      compiler: gcc
      env: TARGET_OS=linux TARGET_ARCH=x86_64 CC_VERSION=4.8
    - os: linux
      compiler: gcc
      env: TARGET_OS=linux TARGET_ARCH=x86_64 CC_VERSION=4.7
    - os: linux
      compiler: gcc
      env: TARGET_OS=linux TARGET_ARCH=x86_64 CC_VERSION=3.5
    - os: linux
      compiler: gcc
      env: TARGET_OS=linux TARGET_ARCH=x86_64 CC_VERSION=3.4
  allow_failures:
    - os: linux
      compiler: gcc
      env: TARGET_OS=linux TARGET_ARCH=x86_64 CC_VERSION=4.8
    - os: linux
      compiler: gcc
      env: TARGET_OS=linux TARGET_ARCH=x86_64 CC_VERSION=4.7

before_install:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo apt-add-repository -y "deb http://llvm.org/apt/precise/ llvm-toolchain-precise-$CC_VERSION main";
      wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key|sudo apt-key add -;
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
      sudo apt-get update -qq;
    fi;

install:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      if [ "$TARGET_OS" = "linux" ]; then
        sudo apt-get install -qq valgrind libegl1-mesa-dev libgles2-mesa-dev libx11-dev libwayland-dev libbsd-dev;
        wget -nc --no-check-certificate http://www.cmake.org/files/v3.1/cmake-3.1.2-Linux-$TARGET_ARCH.tar.gz;
        tar xf cmake-3.1.2-Linux-$TARGET_ARCH.tar.gz && sudo cp -fR cmake-3.1.2-Linux-$TARGET_ARCH/* /usr;
        if [ "$CC" = "gcc" ]; then
          sudo apt-get install -qq gcc-$CC_VERSION g++-$CC_VERSION;
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-$CC_VERSION 90;
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-$CC_VERSION 90;
          sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-$CC_VERSION 90;
          wget -nc --no-check-certificate http://downloads.sourceforge.net/ltp/lcov-1.11.tar.gz;
          tar xzf lcov-1.11.tar.gz && cd lcov-1.11 && make && sudo make install && cd ..;
          gem install coveralls-lcov;
         elif [ "$CC" = "clang" ]; then
          sudo apt-get install --allow-unauthenticated -qq clang-$CC_VERSION;
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-$CC_VERSION 90;
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-$CC_VERSION 90;
        fi;
      fi;
    fi;

script:
  - ctest -VV --output-on-failure -S .travis.ctest

after_success:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      if [ "$CC" = "gcc" ]; then
        lcov --gcov-tool gcov-$CC_VERSION --compat-libtool --directory build --capture --output-file=coverage.info;
        lcov --remove coverage.info 'distribution/*' 'examples/*' 'sourcecode/thirdparty/*' 'tests/*' 'cov-int/*' 'CMakeFiles/*' '/usr*' -o coverage.info;
        coveralls-lcov coverage.info;
      fi;
    fi;

notifications:
  email:
    on_success: change
    on_failure: always

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "Lo6vQDjM1B/BNAhTSphPCEbKxc7uaxOmg8GE+k94tVj4cZuzwvZb8YN8w6FCaHL/D8Vc+TIVAoBRBEGZ9J+VE02kK86kiN8ftcBevF5rtuDNyc4b7yohfpkdfIAe0IJxN76J5mLlwVvlGMPDkDMyPgwNQdSPQpa+HAvwK/kSOJw="

addons:
  coverity_scan:
    project:
      name: "h-s-c/libKD"
    notification_email: h-s-c@users.noreply.github.com
    build_command_prepend: "cmake -DCMAKE_BUILD_TYPE=Debug ."
    build_command:   "cmake --build . --config Debug"
    branch_pattern: coverity